module OutWatch.Tags where

import Data.Traversable (class Traversable)
import OutWatch.Dom.DomUtils (hyperscriptHelper)
import OutWatch.Dom.Types (VDom(..), VNode(..))

div :: forall e f. (Traversable f) => f (VDom e) -> VDom e
div = hyperscriptHelper "div"
span :: forall e f. (Traversable f) => f (VDom e) -> VDom e
span = hyperscriptHelper "span"
h1 :: forall e f. (Traversable f) => f (VDom e) -> VDom e
h1= hyperscriptHelper "h1"
button :: forall e f. (Traversable f) => f (VDom e) -> VDom e
button = hyperscriptHelper "button"
a :: forall e f. (Traversable f) => f (VDom e) -> VDom e
a = hyperscriptHelper "a"
label :: forall e f. (Traversable f) => f (VDom e) -> VDom e
label = hyperscriptHelper "label"
input :: forall e f. (Traversable f) => f (VDom e) -> VDom e
input = hyperscriptHelper "input"
hr :: forall e f. (Traversable f) => f (VDom e) -> VDom e
hr = hyperscriptHelper "hr"
ul :: forall e f. (Traversable f) => f (VDom e) -> VDom e
ul = hyperscriptHelper "ul"
abbr :: forall e f. (Traversable f) => f (VDom e) -> VDom e
abbr = hyperscriptHelper "abbr"
address :: forall e f. (Traversable f) => f (VDom e) -> VDom e
address = hyperscriptHelper "address"
area :: forall e f. (Traversable f) => f (VDom e) -> VDom e
area = hyperscriptHelper "area"
article :: forall e f. (Traversable f) => f (VDom e) -> VDom e
article = hyperscriptHelper "article"
aside :: forall e f. (Traversable f) => f (VDom e) -> VDom e
aside = hyperscriptHelper "aside"
audio :: forall e f. (Traversable f) => f (VDom e) -> VDom e
audio = hyperscriptHelper "audio"
b :: forall e f. (Traversable f) => f (VDom e) -> VDom e
b = hyperscriptHelper "b"
base :: forall e f. (Traversable f) => f (VDom e) -> VDom e
base = hyperscriptHelper "base"
bdi :: forall e f. (Traversable f) => f (VDom e) -> VDom e
bdi = hyperscriptHelper "bdi"
blockquote :: forall e f. (Traversable f) => f (VDom e) -> VDom e
blockquote = hyperscriptHelper "blockquote"
br :: forall e f. (Traversable f) => f (VDom e) -> VDom e
br = hyperscriptHelper "br"
li :: forall e f. (Traversable f) => f (VDom e) -> VDom e
li = hyperscriptHelper "li"
bdo :: forall e f. (Traversable f) => f (VDom e) -> VDom e
bdo = hyperscriptHelper "bdo"
canvas :: forall e f. (Traversable f) => f (VDom e) -> VDom e
canvas = hyperscriptHelper "canvas"
caption :: forall e f. (Traversable f) => f (VDom e) -> VDom e
caption = hyperscriptHelper "caption"
cite :: forall e f. (Traversable f) => f (VDom e) -> VDom e
cite = hyperscriptHelper "cite"
code :: forall e f. (Traversable f) => f (VDom e) -> VDom e
code = hyperscriptHelper "code"
col :: forall e f. (Traversable f) => f (VDom e) -> VDom e
col = hyperscriptHelper "col"
colgroup :: forall e f. (Traversable f) => f (VDom e) -> VDom e
colgroup = hyperscriptHelper "colgroup"
datalist :: forall e f. (Traversable f) => f (VDom e) -> VDom e
datalist = hyperscriptHelper "datalist"
dd :: forall e f. (Traversable f) => f (VDom e) -> VDom e
dd = hyperscriptHelper "dd"
del :: forall e f. (Traversable f) => f (VDom e) -> VDom e
del = hyperscriptHelper "del"
details :: forall e f. (Traversable f) => f (VDom e) -> VDom e
details = hyperscriptHelper "details"
dfn :: forall e f. (Traversable f) => f (VDom e) -> VDom e
dfn = hyperscriptHelper "dfn"
dialog :: forall e f. (Traversable f) => f (VDom e) -> VDom e
dialog = hyperscriptHelper "dialog"
dl :: forall e f. (Traversable f) => f (VDom e) -> VDom e
dl = hyperscriptHelper "dl"
dt :: forall e f. (Traversable f) => f (VDom e) -> VDom e
dt = hyperscriptHelper "dt"
em :: forall e f. (Traversable f) => f (VDom e) -> VDom e
em = hyperscriptHelper "em"
embed :: forall e f. (Traversable f) => f (VDom e) -> VDom e
embed = hyperscriptHelper "embed"
fieldset :: forall e f. (Traversable f) => f (VDom e) -> VDom e
fieldset = hyperscriptHelper "fieldset"
figcaption :: forall e f. (Traversable f) => f (VDom e) -> VDom e
figcaption = hyperscriptHelper "figcaption"
figure :: forall e f. (Traversable f) => f (VDom e) -> VDom e
figure = hyperscriptHelper "figure"
footer :: forall e f. (Traversable f) => f (VDom e) -> VDom e
footer = hyperscriptHelper "footer"
form :: forall e f. (Traversable f) => f (VDom e) -> VDom e
form = hyperscriptHelper "form"
header :: forall e f. (Traversable f) => f (VDom e) -> VDom e
header = hyperscriptHelper "header"
h2 :: forall e f. (Traversable f) => f (VDom e) -> VDom e
h2 = hyperscriptHelper "h2"
h3 :: forall e f. (Traversable f) => f (VDom e) -> VDom e
h3 = hyperscriptHelper "h3"
h4 :: forall e f. (Traversable f) => f (VDom e) -> VDom e
h4 = hyperscriptHelper "h4"
h5 :: forall e f. (Traversable f) => f (VDom e) -> VDom e
h5 = hyperscriptHelper "h5"
h6 :: forall e f. (Traversable f) => f (VDom e) -> VDom e
h6 = hyperscriptHelper "h6"
i :: forall e f. (Traversable f) => f (VDom e) -> VDom e
i = hyperscriptHelper "i"
iframe :: forall e f. (Traversable f) => f (VDom e) -> VDom e
iframe = hyperscriptHelper "iframe"
img :: forall e f. (Traversable f) => f (VDom e) -> VDom e
img = hyperscriptHelper "img"
ins :: forall e f. (Traversable f) => f (VDom e) -> VDom e
ins = hyperscriptHelper "ins"
keygen :: forall e f. (Traversable f) => f (VDom e) -> VDom e
keygen = hyperscriptHelper "keygen"
legend :: forall e f. (Traversable f) => f (VDom e) -> VDom e
legend = hyperscriptHelper "legend"
main :: forall e f. (Traversable f) => f (VDom e) -> VDom e
main = hyperscriptHelper "main"
mark :: forall e f. (Traversable f) => f (VDom e) -> VDom e
mark = hyperscriptHelper "mark"
menu :: forall e f. (Traversable f) => f (VDom e) -> VDom e
menu = hyperscriptHelper "menu"
menuitem :: forall e f. (Traversable f) => f (VDom e) -> VDom e
menuitem = hyperscriptHelper "menuitem"
meter :: forall e f. (Traversable f) => f (VDom e) -> VDom e
meter = hyperscriptHelper "meter"
nav :: forall e f. (Traversable f) => f (VDom e) -> VDom e
nav = hyperscriptHelper "nav"
ol :: forall e f. (Traversable f) => f (VDom e) -> VDom e
ol = hyperscriptHelper "ol"
optgroup :: forall e f. (Traversable f) => f (VDom e) -> VDom e
optgroup = hyperscriptHelper "optgroup"
option :: forall e f. (Traversable f) => f (VDom e) -> VDom e
option = hyperscriptHelper "option"
output :: forall e f. (Traversable f) => f (VDom e) -> VDom e
output = hyperscriptHelper "output"
p :: forall e f. (Traversable f) => f (VDom e) -> VDom e
p = hyperscriptHelper "p"
param :: forall e f. (Traversable f) => f (VDom e) -> VDom e
param = hyperscriptHelper "param"
pre :: forall e f. (Traversable f) => f (VDom e) -> VDom e
pre = hyperscriptHelper "pre"
progress :: forall e f. (Traversable f) => f (VDom e) -> VDom e
progress = hyperscriptHelper "progress"
section :: forall e f. (Traversable f) => f (VDom e) -> VDom e
section = hyperscriptHelper "section"
select :: forall e f. (Traversable f) => f (VDom e) -> VDom e
select = hyperscriptHelper "select"
small :: forall e f. (Traversable f) => f (VDom e) -> VDom e
small = hyperscriptHelper "small"
strong :: forall e f. (Traversable f) => f (VDom e) -> VDom e
strong = hyperscriptHelper "strong"
sub :: forall e f. (Traversable f) => f (VDom e) -> VDom e
sub = hyperscriptHelper "sub"
summary :: forall e f. (Traversable f) => f (VDom e) -> VDom e
summary = hyperscriptHelper "summary"
sup :: forall e f. (Traversable f) => f (VDom e) -> VDom e
sup = hyperscriptHelper "sup"
table :: forall e f. (Traversable f) => f (VDom e) -> VDom e
table = hyperscriptHelper "table"
tbody :: forall e f. (Traversable f) => f (VDom e) -> VDom e
tbody = hyperscriptHelper "tbody"
td :: forall e f. (Traversable f) => f (VDom e) -> VDom e
td = hyperscriptHelper "td"
textarea :: forall e f. (Traversable f) => f (VDom e) -> VDom e
textarea = hyperscriptHelper "textarea"
tfoot :: forall e f. (Traversable f) => f (VDom e) -> VDom e
tfoot = hyperscriptHelper "tfoot"
th :: forall e f. (Traversable f) => f (VDom e) -> VDom e
th = hyperscriptHelper "th"
thead :: forall e f. (Traversable f) => f (VDom e) -> VDom e
thead = hyperscriptHelper "thead"
time :: forall e f. (Traversable f) => f (VDom e) -> VDom e
time = hyperscriptHelper "time"
tr :: forall e f. (Traversable f) => f (VDom e) -> VDom e
tr = hyperscriptHelper "tr"
track :: forall e f. (Traversable f) => f (VDom e) -> VDom e
track = hyperscriptHelper "track"
video :: forall e f. (Traversable f) => f (VDom e) -> VDom e
video = hyperscriptHelper "video"
wbr :: forall e f. (Traversable f) => f (VDom e) -> VDom e
wbr = hyperscriptHelper "wbr"


text ::forall e. String -> VDom e
text str = VNode (StringNode str)
